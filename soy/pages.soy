/**
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the
 * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing permissions and
 * limitations under the License.
 */

// UI components for the FirebaseUI widget.

{namespace firebaseui.auth.soy2.page autoescape="strict"}


/**
 * Renders a sign-in page.
 */
{template .signIn}
  {@param? email: string} /** The email address to prefill. */
  <div class="{css mdl-card} {css mdl-shadow--2dp}{sp}
      {css firebaseui-container} {css firebaseui-id-page-sign-in}">
    <form onsubmit="return false;">
      <div class="{css firebaseui-card-header}">
        <h1 class="{css firebaseui-title}">
          {msg desc="Header of the email/password sign-in page."}Zaloguj się przez Email{/msg}
        </h1>
      </div>
      <div class="{css firebaseui-card-content}">
        <div class="{css firebaseui-relative-wrapper}">
          {call firebaseui.auth.soy2.element.email data="all" /}
        </div>
      </div>
      <div class="{css firebaseui-card-footer}">
        <div class="{css firebaseui-form-actions}">
          {call firebaseui.auth.soy2.element.cancelButton /}
          {call firebaseui.auth.soy2.element.submitButton /}
        </div>
      </div>
    </form>
  </div>
{/template}


/**
 * Renders a sign-in page for password account.
 */
{template .passwordSignIn}
  {@param? email: string} /** The email address to prefill. */
  <div class="{css mdl-card} {css mdl-shadow--2dp}{sp}
      {css firebaseui-container} {css firebaseui-id-page-password-sign-in}">
    <form onsubmit="return false;">
      <div class="{css firebaseui-card-header}">
        <h1 class="{css firebaseui-title}">{msg desc="Header of a sign-in page."}Zaloguj{/msg}</h1>
      </div>
      <div class="{css firebaseui-card-content}">
        {call firebaseui.auth.soy2.element.email data="all" /}
        {call firebaseui.auth.soy2.element.password /}
      </div>
      <div class="{css firebaseui-card-footer}">
        <div class="{css firebaseui-form-actions}">
          {call firebaseui.auth.soy2.element.signInButton /}
        </div>
        {call firebaseui.auth.soy2.element.passwordRecoveryButton /}
      </div>
    </form>
  </div>
{/template}


/**
 * Renders a sign-up page for password account.
 */
{template .passwordSignUp}
  {@param? email: string} /** The email address to prefill. */
  {@param? requireDisplayName: bool} /** Whether to show the display name. */
  {@param? name: string} /** The name to prefill. */
  {@param? tosUrl: string} /** The Terms of Service URL. */
  {@param? allowCancel: bool} /** Whether to show the cancel link. */
  <div class="{css mdl-card} {css mdl-shadow--2dp}{sp}
      {css firebaseui-container} {css firebaseui-id-page-password-sign-up}">
    <form onsubmit="return false;">
      <div class="{css firebaseui-card-header}">
        <h1 class="{css firebaseui-title}">
          {msg desc="Header of a sign-up page."}Utwórz konto{/msg}
        </h1>
      </div>
      <div class="{css firebaseui-card-content}">
        {call firebaseui.auth.soy2.element.email data="all" /}
        {if $requireDisplayName}
          {call firebaseui.auth.soy2.element.name data="all" /}
        {/if}
        {call firebaseui.auth.soy2.element.newPassword}
          {param choose: true /}
        {/call}
        {if $tosUrl}{call firebaseui.auth.soy2.element.tos data="all" /}{/if}
      </div>
      <div class="{css firebaseui-card-footer}">
        <div class="{css firebaseui-form-actions}">
          {if $allowCancel}
            {call firebaseui.auth.soy2.element.cancelButton /}
          {/if}
          {call firebaseui.auth.soy2.element.saveButton /}
        </div>
      </div>
    </form>
  </div>
{/template}


/**
 * Renders a password recovery page.
 */
{template .passwordRecovery}
  {@param? email: string} /** The email address to prefill. */
  {@param? allowCancel: bool} /** Whether to show the cancel link. */
  <div class="{css mdl-card} {css mdl-shadow--2dp}{sp}
      {css firebaseui-container} {css firebaseui-id-page-password-recovery}">
    <form onsubmit="return false;">
      <div class="{css firebaseui-card-header}">
        <h1 class="{css firebaseui-title}">
          {msg desc="Header of a password recovery page."}Odzyskaj hasło{/msg}
        </h1>
      </div>
      <div class="{css firebaseui-card-content}">
        <p class="{css firebaseui-text}">
          {msg desc="Information on how the user resets their password."}
            Na ten e-mail, zostaną wysłane instrukcje, jak zresetować hasło
            Get instructions sent to this email that explain how to reset your password
          {/msg}
        </p>
        {call firebaseui.auth.soy2.element.email data="all" /}
      </div>
      <div class="{css firebaseui-card-footer}">
        <div class="{css firebaseui-form-actions}">
          {if $allowCancel}
            {call firebaseui.auth.soy2.element.cancelButton /}
          {/if}
          {call firebaseui.auth.soy2.element.submitButton}
            {param label kind="text"}
              {msg desc="The button that sends a password recovery email."}
                Wyślij
              {/msg}
            {/param}
          {/call}
        </div>
      </div>
    </form>
  </div>
{/template}


/**
 * Renders a notice page to indicate the password recovery email has been sent.
 */
{template .passwordRecoveryEmailSent}
  {@param email: string} /** The email address to which the password reset email has been sent. */
  {@param? allowContinue: bool} /** Whether to show the continue button. */
  <div class="{css mdl-card} {css mdl-shadow--2dp}{sp}
      {css firebaseui-container} {css firebaseui-id-page-password-recovery-email-sent}">
    <div class="{css firebaseui-card-header}">
      <h1 class="{css firebaseui-title}">
        {msg desc="Header of a notice page when the password recovery email has been sent."}
          Sprawdź swój email
        {/msg}
      </h1>
    </div>
    <div class="{css firebaseui-card-content}">
      <p class="{css firebaseui-text}">
        {msg desc="Detailed info of a notice page when the password recovery email has been sent."}
          Postępuj zgodnie z instrukcjami wysłanymi do <strong>{$email}</strong> aby odzyskać hasło
        {/msg}
      </p>
    </div>
    <div class="{css firebaseui-card-footer}">
      {if $allowContinue}
        <div class="{css firebaseui-form-actions}">
          {call firebaseui.auth.soy2.element.submitButton}
            {param label kind="text"}
              {msg desc="Label of a button that finishes the password recovery flow."}
                OK
              {/msg}
            {/param}
          {/call}
        </div>
      {/if}
    </div>
  </div>
{/template}


/**
 * Renders a callback page which simply shows an activity loading indicator when calling the remote
 * API so that the user won't be confused by the blank page.
 */
{template .callback}
  <div class="{css mdl-card} {css mdl-shadow--2dp}{sp}
      {css firebaseui-container} {css firebaseui-id-page-callback}">
    <div class="{css firebaseui-callback-indicator-container}">
      {call firebaseui.auth.soy2.element.busyIndicator /}
    </div>
  </div>
{/template}


/**
 * Renders an account linking page for a password account.
 */
{template .passwordLinking}
  /** The user's email. */
  {@param email:string}
  <div class="{css mdl-card} {css mdl-shadow--2dp}{sp}
      {css firebaseui-container} {css firebaseui-id-page-password-linking}">
    <form onsubmit="return false;">
      <div class="{css firebaseui-card-header}">
        <h1 class="{css firebaseui-title}">{msg desc="Header of a sign-in page."}Zaloguj się{/msg}</h1>
      </div>
      <div class="{css firebaseui-card-content}">
        <h2 class="{css firebaseui-subtitle}">
          {msg desc="Header of a page displayed when the user has signed in before with an email and
              password account."}
            Posiadasz już konto
          {/msg}
        </h2>
        <p class="{css firebaseui-text}">
          {msg desc="Message that reminds the user the previous and current sign-in status."}
            Ten email <strong>{$email}</strong> jest już powiązany z kontem. Wprowadź hasło dla tego konta.
          {/msg}
        </p>
        {call firebaseui.auth.soy2.element.password /}
      </div>
      <div class="{css firebaseui-card-footer}">
        {call firebaseui.auth.soy2.element.passwordRecoveryButton /}
        <div class="{css firebaseui-form-actions}">
          {call firebaseui.auth.soy2.element.signInButton /}
        </div>
      </div>
    </form>
  </div>
{/template}


/**
 * Renders an account linking page for a federated account.
 */
{template .federatedLinking}
  {@param email: string}
  {@param providerId: string}
  {let $idpDisplayName kind="text"}{call firebaseui.auth.soy2.element.idpName data="all" /}{/let}
  <div class="{css mdl-card} {css mdl-shadow--2dp}{sp}
      {css firebaseui-container} {css firebaseui-id-page-federated-linking}">
    <form onsubmit="return false;">
      <div class="{css firebaseui-card-header}">
        <h1 class="{css firebaseui-title}">{msg desc="Header of a sign-in page."}Zaloguj się{/msg}</h1>
      </div>
      <div class="{css firebaseui-card-content}">
        <h2 class="{css firebaseui-subtitle}">
          {msg desc="Header of a page displayed when the user has signed in before with the provided
              email."}
            Posiadasz już konto
          {/msg}
        </h2>
        <p class="{css firebaseui-text}">
          {msg desc="Message that reminds the user the previous sign-in status."}
            Użyłeś już ten email <strong>{$email}</strong>. Zaloguj się jako {$idpDisplayName} aby kontynuować.
          {/msg}
        </p>
      </div>
      <div class="{css firebaseui-card-footer}">
        <div class="{css firebaseui-form-actions}">
          {call firebaseui.auth.soy2.element.submitButton}
            {param label kind="text"}
              {msg desc="Label of a button that signs in a user with a federated identity provider
                  (e.g. Sign in with Google, Sign in with Facebook)."}
                Zaloguj się z {$idpDisplayName}
              {/msg}
            {/param}
          {/call}
        </div>
      </div>
    </form>
  </div>
{/template}


/**
 * Renders a reset password page.
 */
{template .passwordReset}
  {@param email: string} /** The email address of the account to reset password. */
  <div class="{css mdl-card} {css mdl-shadow--2dp}{sp}
      {css firebaseui-container} {css firebaseui-id-page-password-reset}">
    <form onsubmit="return false;">
      <div class="{css firebaseui-card-header}">
        <h1 class="{css firebaseui-title}">
          {msg desc="Header of a page where the user can reset their password."}
            Zresetuj swoje hasło
          {/msg}
        </h1>
      </div>
      <div class="{css firebaseui-card-content}">
        {msg desc="Tell the user the email of the account for which the password is being
            changed."}
          <p class="{css firebaseui-text}">
            dla <strong>{$email}</strong>
          </p>
        {/msg}
        {call firebaseui.auth.soy2.element.newPassword data="all"}
          {param label kind="text"}
            {msg desc="Label for the password input field in the Reset Password page."}
              Nowe hasło
            {/msg}
          {/param}
        {/call}
      </div>
      <div class="{css firebaseui-card-footer}">
        <div class="{css firebaseui-form-actions}">
          {call firebaseui.auth.soy2.element.saveButton /}
        </div>
      </div>
    </form>
  </div>
{/template}


/**
 * Renders a notice page for password reset success.
 */
{template .passwordResetSuccess}
  {@param? allowContinue: bool} /** Whether to show the continue button. */
  <div class="{css mdl-card} {css mdl-shadow--2dp}{sp}
      {css firebaseui-container} {css firebaseui-id-page-password-reset-success}">
    <div class="{css firebaseui-card-header}">
      <h1 class="{css firebaseui-title}">
        {msg desc="Header of a successful password change notice page"}Hasło zmienione{/msg}
      </h1>
    </div>
    <div class="{css firebaseui-card-content}">
      <p class="{css firebaseui-text}">
        {msg desc="Detailed info of a notice page that password reset succeeded."}
          Możesz się teraz zalogować używając nowego hasła
        {/msg}
      </p>
    </div>
    <div class="{css firebaseui-card-footer}">
      {if $allowContinue}
        <div class="{css firebaseui-form-actions}">
          {call firebaseui.auth.soy2.element.submitButton /}
        </div>
      {/if}
    </div>
  </div>
{/template}


/**
 * Renders a notice page for password reset failure.
 */
{template .passwordResetFailure}
  {@param? allowContinue: bool} /** Whether to show the continue button. */
  <div class="{css mdl-card} {css mdl-shadow--2dp}{sp}
      {css firebaseui-container} {css firebaseui-id-page-password-reset-failure}">
    <div class="{css firebaseui-card-header}">
      <h1 class="{css firebaseui-title}">
        {msg desc="Header of a password reset failure notice page"}
          Spróbuj zresetować hasło raz jeszcze
        {/msg}
      </h1>
    </div>
    <div class="{css firebaseui-card-content}">
      <p class="{css firebaseui-text}">
        {msg desc="Detailed info of a notice page that password reset failed."}
          Twoja prośba o zresetowanie hasła wygasła lub link został już użyty
        {/msg}
      </p>
    </div>
    <div class="{css firebaseui-card-footer}">
      {if $allowContinue}
        <div class="{css firebaseui-form-actions}">
          {call firebaseui.auth.soy2.element.submitButton /}
        </div>
      {/if}
    </div>
  </div>
{/template}


/**
 * Renders a notice page for email change revocation success.
 */
{template .emailChangeRevokeSuccess}
  {@param email: string} /** The old email address of the account to reactivate. */
  {@param? allowContinue: bool} /** Whether to show the continue button. */
  <div class="{css mdl-card} {css mdl-shadow--2dp}{sp}
      {css firebaseui-container} {css firebaseui-id-page-email-change-revoke-success}">
    <form onsubmit="return false;">
      <div class="{css firebaseui-card-header}">
        <h1 class="{css firebaseui-title}">
          {msg desc="Header of a page notifying that an email change request has been revoked"}
            Zaktualizuj adres e-mail
          {/msg}
        </h1>
      </div>
      <div class="{css firebaseui-card-content}">
        <p class="{css firebaseui-text}">
          {msg desc="Detailed info of a notice page that an email change request has been revoked."}
            Twój adres poczty elektronicznej został zmieniony z powrotem na <strong>{$email}</strong>.
          {/msg}
        </p>
        <p class="{css firebaseui-text}">
          {msg desc="Message that explains to the user that they can reset their password if they
               suspect someone has accessed their account."}
            Jeśli nie prosiłeś o zmianę adresu e-mail, może ktoś próbuje uzyskać dostęp do Twojego konta.
            Powinieneś <a
                class="{css firebaseui-link} {css firebaseui-id-reset-password-link}"
                href="javascript:void(0)">
              natychmiast zmienić Swoje aktualne hasło.
            </a>.
          {/msg}
        </p>
      </div>
      <div class="{css firebaseui-card-footer}">
        {if $allowContinue}
          <div class="{css firebaseui-form-actions}">
            {call firebaseui.auth.soy2.element.submitButton /}
          </div>
        {/if}
      </div>
    </form>
  </div>
{/template}


/**
 * Renders a notice page for email change revocation failure.
 */
{template .emailChangeRevokeFailure}
  {@param? allowContinue: bool} /** Whether to show the continue button. */
  <div class="{css mdl-card} {css mdl-shadow--2dp}{sp}
      {css firebaseui-container} {css firebaseui-id-page-email-change-revoke-failure}">
    <div class="{css firebaseui-card-header}">
      <h1 class="{css firebaseui-title}">
        {msg desc="Header of a page notifying that an email change revocation request has failed"}
          Nie można zaktualizować Twojego adresu e-mail
        {/msg}
      </h1>
    </div>
    <div class="{css firebaseui-card-content}">
      {msg desc="Detailed info of a notice page that email change revocation has failed."}
        <p class="{css firebaseui-text}">
          Wystąpił problem podczas zmiany e-maila do logowania.
        </p>
        <p class="{css firebaseui-text}">
          Jeśli spróbujesz ponownie i nadal nie będziesz mogł zresetować swojego e-maila, spróbuj poprosić administratora o pomoc.
        </p>
      {/msg}
    </div>
    <div class="{css firebaseui-card-footer}">
      {if $allowContinue}
        <div class="{css firebaseui-form-actions}">
          {call firebaseui.auth.soy2.element.submitButton /}
        </div>
      {/if}
    </div>
  </div>
{/template}


/**
 * Renders a notice page that confirms the user's email has been verified.
 */
{template .emailVerificationSuccess}
  {@param? allowContinue: bool} /** Whether to show the continue button. */
  <div class="{css mdl-card} {css mdl-shadow--2dp}{sp}
      {css firebaseui-container} {css firebaseui-id-page-email-verification-success}">
    <div class="{css firebaseui-card-header}">
      <h1 class="{css firebaseui-title}">
        {msg desc="Header of a page telling the user their email address has been verified."}
          Twój email został zweryfikowany
        {/msg}
      </h1>
    </div>
    <div class="{css firebaseui-card-content}">
      <p class="{css firebaseui-text}">
        {msg desc="Detailed info of a notice page that confirms user's email is verified"}
          Możesz się teraz zalogować do Twojego nowego konta
        {/msg}
      </p>
    </div>
    <div class="{css firebaseui-card-footer}">
      {if $allowContinue}
        <div class="{css firebaseui-form-actions}">
          {call firebaseui.auth.soy2.element.submitButton /}
        </div>
      {/if}
    </div>
  </div>
{/template}


/**
 * Renders a notice page for email verification failure.
 */
{template .emailVerificationFailure}
  {@param? allowContinue: bool} /** Whether to show the continue button. */
  <div class="{css mdl-card} {css mdl-shadow--2dp}{sp}
      {css firebaseui-container} {css firebaseui-id-page-email-verification-failure}">
    <div class="{css firebaseui-card-header}">
      <h1 class="{css firebaseui-title}">
        {msg desc="Header of a page telling the user that email verification has failed."}
          Spróbuj zweryfikować Swój email ponownie.
        {/msg}
      </h1>
    </div>
    <div class="{css firebaseui-card-content}">
      <p class="{css firebaseui-text}">
        {msg desc="Detailed info of a notice page that email verification failed."}
          Prośba o weryfikację Twojego e-maila wygasła lub link został już użyty
        {/msg}
      </p>
    </div>
    <div class="{css firebaseui-card-footer}">
      {if $allowContinue}
        <div class="{css firebaseui-form-actions}">
          {call firebaseui.auth.soy2.element.submitButton /}
        </div>
      {/if}
    </div>
  </div>
{/template}


/**
 * Renders a notice page that shows that an unrecoverable error was encountered.
 */
{template .unrecoverableError}
  {@param errorMessage: string} /** The detailed error message. */
  <div class="{css mdl-card} {css mdl-shadow--2dp}{sp}
      {css firebaseui-container} {css firebaseui-id-page-unrecoverable-error}">
    <div class="{css firebaseui-card-header}">
      <h1 class="{css firebaseui-title}">
        {msg desc="Header of a notice page"}Wystąpił błąd{/msg}
      </h1>
    </div>
    <div class="{css firebaseui-card-content}">
      <p class="{css firebaseui-text}">
        {$errorMessage}
      </p>
    </div>
  </div>
{/template}


/**
 * Renders the email mismatch page.
 */
{template .emailMismatch}
  {@param userEmail: string} /** The email returned by the identity provider. */
  {@param pendingEmail: string} /** The email formerly used. */
  <div class="{css mdl-card} {css mdl-shadow--2dp}{sp}
      {css firebaseui-container} {css firebaseui-id-page-email-mismatch}">
    <form onsubmit="return false;">
      <div class="{css firebaseui-card-header}">
        <h1 class="{css firebaseui-title}">{msg desc="Header of a sign-in page."}Zaloguj się{/msg}</h1>
      </div>
      <div class="{css firebaseui-card-content}">
        <h2 class="{css firebaseui-subtitle}">
          {msg desc="Message that asks the user if he wishes to continue signing in with the
               provided email or sign out from the identity provider such as Google or Facebook
               and try to sign in again with a different email."}
            Kontynuuj jako {$userEmail}?
          {/msg}
        </h2>
        <p class="{css firebaseui-text}">
          {msg desc="Message that tells the user he originally wanted to sign in with a different
              email address."}
            Początkowo chciałeś się zalogować jako {$pendingEmail}
          {/msg}
        </p>
      </div>
      <div class="{css firebaseui-card-footer}">
        <div class="{css firebaseui-form-actions}">
          {call firebaseui.auth.soy2.element.cancelButton /}
          {call firebaseui.auth.soy2.element.submitButton}
            {param label kind="text"}
              {msg desc="The button that confirms that the user wishes to proceed with the current
                  email."}
                Kontynuuj
              {/msg}
            {/param}
          {/call}
        </div>
      </div>
    </form>
  </div>
{/template}


/**
 * Renders the list of supported sign-in providers.
 */
{template .providerSignIn}
  {@param providerIds: list<string>} /** List of supported IdPs. */
  <div class="{css firebaseui-container} {css firebaseui-page-provider-sign-in}{sp}
      {css firebaseui-id-page-provider-sign-in}">
    <div class="{css firebaseui-card-content}">
      <form onsubmit="return false;">
        <ul class="{css firebaseui-idp-list}">
          {foreach $providerId in $providerIds}
            <li class="{css firebaseui-list-item}">
              {call firebaseui.auth.soy2.element.idpButton}
                {param providerId: $providerId /}
              {/call}
            </li>
          {/foreach}
        </ul>
      </form>
    </div>
  </div>
{/template}


/**
 * Renders a phone sign-in start page.
 */
{template .phoneSignInStart}
  {@param? nationalNumber: string} /** The phone number to prefill. */
  {@param? enableVisibleRecaptcha: bool} /** Whether to enable the visible reCAPTCHA. */
  <div class="{css mdl-card} {css mdl-shadow--2dp}{sp}
      {css firebaseui-container} {css firebaseui-id-page-phone-sign-in-start}">
    <form onsubmit="return false;">
      <div class="{css firebaseui-card-header}">
        <h1 class="{css firebaseui-title}">
          {msg desc="Header of the phone number sign-in page."}Wprowadź numer telefonu{/msg}
        </h1>
      </div>
      <div class="{css firebaseui-card-content}">
        <div class="{css firebaseui-relative-wrapper}">
          {call firebaseui.auth.soy2.element.phoneNumber data="all" /}
          {if $enableVisibleRecaptcha}
            {call firebaseui.auth.soy2.element.recaptcha /}
          {/if}
        </div>
      </div>
      <div class="{css firebaseui-card-footer}">
        <div class="{css firebaseui-form-actions}">
          {call firebaseui.auth.soy2.element.cancelButton /}
          {call firebaseui.auth.soy2.element.submitButton}
            {param label kind="text"}
              {msg desc="The button that initiates the verification of the phone number provided
                  for an authentication flow by sending a verification code to that phone number."}
                Zweryfikuj
              {/msg}
            {/param}
          {/call}
        </div>
      </div>
    </form>
  </div>
{/template}

/**
 * Renders a phone sign-in finish page.
 */
{template .phoneSignInFinish}
  {@param? phoneNumber: string} /** The phone number to confirm */
  <div class="{css mdl-card} {css mdl-shadow--2dp}{sp}
      {css firebaseui-container} {css firebaseui-id-page-phone-sign-in-finish}">
    <form onsubmit="return false;">
      <div class="{css firebaseui-card-header}">
        <h1 class="{css firebaseui-title}">
          {msg desc="Header of the phone number sign-in code verification page."}
            Zweryfikuje Swój numer telefonu{/msg}
        </h1>
      </div>
      <div class="{css firebaseui-card-content}">
        <p class="{css firebaseui-text}">
          {msg desc="A link to edit the phone number that the verification code was sent to."}
            Wprowadź 6 cyfrowy kod który wysłaliśmy do{sp}
            <a class="{css firebaseui-link} {css firebaseui-change-phone-number-link}{sp}
                      {css firebaseui-id-change-phone-number-link}"
               href="javascript:void(0)">{$phoneNumber}</a>
          {/msg}
        </p>
        {call firebaseui.auth.soy2.element.phoneConfirmationCode /}
      </div>
      <div class="{css firebaseui-card-footer}">
        <div class="{css firebaseui-form-actions}">
          {call firebaseui.auth.soy2.element.cancelButton /}
          {call firebaseui.auth.soy2.element.submitButton}
            {param label kind="text"}
              {msg desc="The button that completes verification of the phone number provided
                  for an authentication flow."}
                Kontynuuj
              {/msg}
            {/param}
          {/call}
        </div>
      </div>
    </form>
  </div>
{/template}
